<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Raskai-Group</title>
    <link rel="stylesheet" href="admin.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <style>
        .hidden {
            display: none;
        }
    </style>
</head>
<body>
    <header role="banner">
        <h1>Admin Panel</h1>
        <ul class="utilities">
          <li class=""><a href="#"><i class="fa fa-user" style="font-size:25px;padding: 10px;"></i><%= capitalizedName %></a></li>
          <li class=""><a href="/logout"><i class="fa fa-sign-out" style="font-size:25px; padding: 5px;padding-top:20px;"></i>Log Out</a></li>
        </ul>
      </header>
      <nav role="navigation">
        <ul class="main">
          <li class="" style="background-color: darkgray;"><a href="#">Dashboard</a></li>
          <li class=""><a href="#">Write Post</a></li>
          <li class=""><a href="#">Edit Posts</a></li>
          <li class=""><a href="#">Comments</a></li>
          <li id="manageUsersLink"><a href="#">Manage Users</a></li>
        </ul>
      </nav>
      <main role="main">
        <section id="welcomeSection"  style="max-width: 900px; padding: 10px 0 0 10px; font-family: Arial, sans-serif; text-align: left;">
        <h1>Welcome, <%= capitalizedName %>!</h1>
        </section>
        <section id="manageUsersSection">
            <div class="container col-md-4" id="panel1">
                <h2>User Accounts</h2>
                <div class="form-group col-md-12">
                  <table class="table table-bordered table-hover">
                    <thead>
                      <tr class="">
                        <!--<th><input type="checkbox" unchecked></th>-->
                        <th> Name</th>
                        <th>E-mail</th>
                        <th>Role</th>
                        <th>Update User </th>
                        <th>Delete User</th>
                      </tr>
                    </thead>
                    <tbody >
                        <% for (let i = 0; i < users.length; i++) { %>
                            <tr>
                              <% if (users[i].role !== 'admin') { %>
                                <td><%= users[i].name %></td>
                                <td><%= users[i].email %></td>
                                <td><%= users[i].role %></td>
                                <td>
                                    <button onclick="updateUserForm('<%= users[i]._id %>', '<%= users[i].name %>', '<%= users[i].email %>', '<%= users[i].password %>')">Update</button>
                                </td>
                                <td>
                                  <button  onclick="deleteUser('<%= users[i]._id %>')">Delete</button>
                                </td>
                              <% } %>
                            </tr>
                          <% } %> 
                    </tbody>
                  </table>
                  <nav>
                    <ul class="pagination">
                      <li class="disabled"><a href="#"><span aria-hidden="true">«</span><span class="sr-only">Previous</span></a></li>
                      <li class="active"><a href="/admin?page=<%= 1 %>&pageSize=<%= 10 %>">1 <span class="sr-only">(current)</span></a></li>
                      <li><a href="/admin?page=<%= 2 %>&pageSize=<%= 10 %>">2</a></li>
                      <li><a href="/admin?page=<%= 3 %>&pageSize=<%= 10 %>">3</a></li>
                      <li><a href="#">4</a></li>
                      <li><a href="#"><span aria-hidden="true">»</span><span class="sr-only">Next</span></a></li>
                   </ul>
                 </nav>
                </div>
              </div>
        </section>
        <section id="create-user" style="padding-top: 40px;">
            <div class="container col-md-4" id="panel1">
                <h2>Create User</h2>
            <div class="admin-user">
            <form action="/register/" method="post">
                <input type="text" placeholder="Name" name="name">
                <input type="email" placeholder="Email" name="email">
                <input type="password" placeholder="Password" name="password"><br>
                <label style="margin-right: 10px;">
                  <input type="radio" name="role" value="student" checked style="width: auto;"> Student
              </label>
          
              <label>
                  <input type="radio" name="role" value="teacher" style="width: auto;"> Teacher
              </label>
          
              <br><br>
                <button type="submit">Create</button>
            </form>
        </div>
        </div>
        </section>
        <section id="updateUserSection" style="padding-top: 40px;" class="hidden">
            <div class="container col-md-4" id="panel1">
                <h2>Update User</h2>
            <div class="admin-user">
            <form id="updateUserForm"  method="POST">
                <input type="text" placeholder="Name" name="name">
                <input type="email" placeholder="Email" name="email">
                <input type="password" placeholder="Password" name="password">
                <button type="submit"onclick="submitUpdateForm()">Update</button>
            </form>
        </div>
        </div>
        </section>
      </main>
</body>
<script>
  
    async function deleteUser(userId) {
    const confirmed = confirm('Are you sure you want to delete this user?');
    if (confirmed) {
        console.log("Iam here")
      try {
        const response = await fetch(`/delete/${userId}`, {
          method: 'DELETE',
          headers: {
            'Content-Type': 'application/json',
          },
        });
        window.location.reload();

        if (response.ok) {
          // Reload the page or update the UI as needed
          window.location.reload();
        } else {
            try {
                    const errorData = await response.json(); // Attempt to parse JSON
                    console.error('Error deleting user:', errorData);
                } catch (jsonError) {
                    console.error('Non-JSON error:', response.statusText);
                    // Handle non-JSON error (e.g., display an error message to the user)
                }
        }
      } catch (error) {
        console.error('Error:', error);
      }
    }
  }

  function updateUserForm(userId, userName, userEmail, userPassword) {  
    const form = document.querySelector('#updateUserForm');
    const nameInput = form.querySelector('input[name="name"]');
    const emailInput = form.querySelector('input[name="email"]');
    const passwordInput = form.querySelector('input[name="password"]');

    nameInput.value = userName;
    emailInput.value = userEmail;
    passwordInput.value = userPassword;

    form.action = `/update/${userId}`;

    document.getElementById('welcomeSection').classList.add('hidden');
    document.getElementById('manageUsersSection').classList.add('hidden');
    document.getElementById('create-user').classList.add('hidden');
    document.getElementById('updateUserSection').classList.remove('hidden');
  }

  function submitUpdateForm() {
    const form = document.querySelector('#updateUserForm');
    const confirmed = confirm('Are you sure you want to update this user?');
    
    if (confirmed) {
        // Assuming you have an async function to handle the update
        handleUpdate(form);
    }
}

async function handleUpdate(form) {
    try {
        const response = await fetch(form.action, {
            method: 'POST', // Change the method based on your server's requirements
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                name: form.querySelector('input[name="name"]').value,
                email: form.querySelector('input[name="email"]').value,
                password: form.querySelector('input[name="password"]').value,
            }),
        });

        if (response.ok) {
            // Optionally, you can handle success here
            console.log('User updated successfully');
        } else {
            try {
                const errorData = await response.json(); // Attempt to parse JSON
                console.error('Error updating user:', errorData);
            } catch (jsonError) {
                console.error('Non-JSON error:', response.statusText);
                // Handle non-JSON error (e.g., display an error message to the user)
            }
        }
    } catch (error) {
        console.error('Error:', error);
    }
}

</script>
</html>